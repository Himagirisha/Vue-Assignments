================================================================================================
Assignment 2
===============================================================================================


1. v-html#
Update the element's innerHTML.

Expects: string

v-show#
Toggle the element's visibility based on the truthy-ness of the expression value.

Expects: any

v-if#
Conditionally render an element or a template fragment based on the truthy-ness of the expression value.

Expects: any


v-else#
Denote the "else block" for v-if or a v-if / v-else-if chain.

Does not expect expression

v-bind
Dynamically bind one or more attributes, or a component prop to an expression.

Shorthand: : or . (when using .prop modifier)


v-model#
Create a two-way binding on a form input element or a component.


v-once#
Render the element and component once only, and skip future updates.

Does not expect expression
---------------------------------------------------------------------------------------------
3.computed properties enable you to create a property that can be used to modify, manipulate,
 and display data within your components in a readable and efficient manner
-------------------------------------------------------------------------------------------------
4.A Watcher in Vue.js is a special feature that allows one to watch a component and perform specified actions when the value of the component changes.
 It is a more generic way to observe and react to data changes in the Vue instance. Watchers are the most useful when used to perform asynchronous operations.

Note: Watchers can change only one property at a time. If multiple component values have to be changed, one can use computed properties.

Syntax:

watch: {
   // We can add our functions here
}
-------------------------------------------------------------------------------------------------------
5.While Vue's declarative rendering model abstracts away most of the direct DOM operations.So, where we want to access real DOM  
we can use the special ref attribute. ref is a special attribute, 
similar to the key attribute. It allows us to obtain a direct reference 
to a specific DOM element or child component instance after it's mounted.
you can only access the ref after the component is mounted. If you try to 
access $refs.input in a template expression, it will be null on the first 
render. This is because the element doesn't exist until after the first render
---------------------------------------------------------------------------------------------------------------------------------
6.
5.Explain the Life cycle Methods in Vue?

//Mounting phase
1)beforeCreate#
Called when the instance is initialized.

2)created#
Called after the instance has finished processing all state-related options.

3)beforeMount#
Called right before the component is to be mounted.

4)mounted#
Called after the component has been mounted.

//Updating phase
5)beforeUpdate#
Called right before the component is about to update its DOM tree due to a reactive state change.

6)updated#
Called after the component has updated its DOM tree due to a reactive state change.

//Unmounting phase
7)beforeUnmount#
Called right before a component instance is to be unmounted.

8)unmounted#
Called after the component has been unmounted.